version: "3.3"
services:
  controller:
    image: greenhouse-controller
    build: ./controller
    container_name: greenhouse-controller
    restart: always
    env_file:
      - .env
    links:
      - "notification-service:notification-service"
      - "mosquitto:mqtt"
      - "mariadb:db"
      - "redis:redis"
    depends_on:
      - mosquitto
      - notification-service
      - mariadb
      - redis

  dashboard:
    image: greenhouse-dashboard
    build: ./dashboard
    container_name: greenhouse-dashboard
    restart: always
    env_file:
      - .env
    links:
      - "mariadb:db"
      - "redis:redis"
    ports:
      - "5004:5004"
    depends_on:
      - mariadb
      - redis
  
  mosquitto:
    image: eclipse-mosquitto
    container_name: greenhouse-mqtt
    restart: always
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    ports:
      - "1883:1883"
      - "9001:9001"

  notification-service:
    build: ./notification-service
    image: greenhouse-notification-service
    container_name: greenhouse-notification-service
    restart: always
    env_file:
      - .env
    volumes:
      - ./notification-service/signal-cli-client:/opt/signalmessenger/signal-cli
      - ./notification-service/signal-cli/data:/opt/signalmessenger/data
    links:
      - "mosquitto:mqtt"
      - "redis:redis"
    depends_on:
      - mosquitto
      - redis
    
  mariadb:
    build: 
      context: ./database
      dockerfile: Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
    image: greenhouse-mariadb
    container_name: greenhouse-mariadb
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - TZ=Europe/Berlin
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER} 
      - MYSQL_PASSWORD=${DB_PASSWORD} 
    volumes:
      - database:/config
    expose:
      - "3306"
    restart: unless-stopped
      
  redis:
    image: redis
    container_name: greenhouse-redis
    expose:
      - "6379"
    volumes:
      - redisdata:/var/lib/redis
    restart: unless-stopped

  redis-commander:
    container_name: greenhouse-redis-commander
    image: redis-pi:latest
    restart: always
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - "8081:8081"
    networks:
      - default
  

volumes:
  database:
  redisdata:
